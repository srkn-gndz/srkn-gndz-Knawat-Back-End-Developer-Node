#########################################################
# Common Environment variables ConfigMap
#########################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-env
data:
  NAMESPACE: ""
  LOGLEVEL: info
  SERVICEDIR: dist/services
  TRANSPORTER: nats://nats:4222
  
  
  
  
  
  
  
  CACHER: redis://redis:6379

---
#########################################################
# Service for Moleculer API Gateway service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
  - port: 3000
    targetPort: 3000

---
#########################################################
# Ingress for Moleculer API Gateway
#########################################################
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
spec:
  rules:
  - host: server4.127.0.0.1.nip.io
    http:
      paths:
      - path: /
        backend:
          serviceName: api
          servicePort: 3000

---
#########################################################
# API Gateway service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: api
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: api
          - name: PORT
            value: "3000"
        ports:
          - containerPort: 3000

---
#########################################################
# Users service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
spec:
  selector:
    matchLabels:
      app: users
  replicas: 2
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
      - name: users
        image: users
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: users

---
#########################################################
# Products service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products
spec:
  selector:
    matchLabels:
      app: products
  replicas: 2
  template:
    metadata:
      labels:
        app: products
    spec:
      containers:
      - name: products
        image: products
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: products

---
#########################################################
# elasticsearch server
#########################################################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  selector:
    matchLabels:
      app: elasticsearch
  replicas: 1
  serviceName: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - image: elasticsearch
          name: elasticsearch
          ports:
            - containerPort: 9200
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: elasticsearch-data
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data

---
#########################################################
# Persistent volume for elasticsearch
#########################################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-data
  labels:
    name: elasticsearch-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
#########################################################
# elasticsearch service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  ports:
    - port: 9200
      targetPort: 9200
  selector:
    app: elasticsearch          


---
#########################################################
# NATS transporter service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
  - port: 4222
    name: nats
    targetPort: 4222

---
#########################################################
# NATS transporter
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - name: nats
        image: nats
        ports:
        - containerPort: 4222
          name: nats

---
#########################################################
# Redis service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    name: redis
    targetPort: 6379

---
#########################################################
# Redis server (transporter/cacher)
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379
          name: redis





